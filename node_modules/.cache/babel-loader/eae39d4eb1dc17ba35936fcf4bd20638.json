{"ast":null,"code":"var _jsxFileName = \"/Users/richardph911/Desktop/todolist/src/TodoApp.js\";\nimport React, { useState, useEffect } from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\nimport { v4 as uuidv4 } from 'uuid';\n\nfunction TodoApp() {\n  //using local storage to display init values\n  const initialTodos = JSON.parse(window.localStorage.getItem('todos') || \"[]\"); // const initialTodos =[\n  //     {id: 1, task:'Do wash', completed: true},\n  //     {id: 2, task:'Eat', completed: true},\n  //     {id: 3, task:'Tennis', completed: false},\n  // ]\n\n  const [todos, setTodos] = useState(initialTodos); // this will run everytime the component render\n\n  useEffect(() => {\n    window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n  });\n\n  const addTodo = newTodoText => {\n    setTodos([...todos, {\n      id: uuidv4(),\n      task: newTodoText,\n      completed: false\n    }]);\n  };\n\n  const removeTodo = todoId => {\n    const updatedTodos = todos.filter(todo => todo.id !== todoId);\n    setTodos(updatedTodos);\n  };\n\n  const toggleTodo = todoId => {\n    const updatedTodos = todos.map(todo => todo.id === todoId ? { ...todo,\n      completed: !todo.completed\n    } : todo);\n    setTodos(updatedTodos);\n  };\n\n  const editTodo = (todoId, newTask) => {\n    const updateTodos = todos.map(todo => todo.id === todoId ? { ...todo,\n      task: newTask\n    } : todo);\n    setTodos(updateTodos);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    style: {\n      padding: 0,\n      margin: 0,\n      height: \"100vh\",\n      backgroundColor: \"white\"\n    },\n    elevation: 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    color: \"primary\",\n    position: \"static\",\n    style: {\n      height: \"64px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToolBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, \"TODOs WITH HOOLS\"))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    style: {\n      marginTop: \"1rem\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    md: 8,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TodoForm, {\n    addTodo: addTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TodoList, {\n    todos: todos,\n    removeTodo: removeTodo,\n    toggleTodo: toggleTodo,\n    editTodo: editTodo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default TodoApp;","map":{"version":3,"sources":["/Users/richardph911/Desktop/todolist/src/TodoApp.js"],"names":["React","useState","useEffect","Typography","Paper","AppBar","ToolBar","Grid","TodoList","TodoForm","v4","uuidv4","TodoApp","initialTodos","JSON","parse","window","localStorage","getItem","todos","setTodos","setItem","stringify","addTodo","newTodoText","id","task","completed","removeTodo","todoId","updatedTodos","filter","todo","toggleTodo","map","editTodo","newTask","updateTodos","padding","margin","height","backgroundColor","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport ToolBar from \"@material-ui/core/Toolbar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport TodoList from './TodoList';\nimport TodoForm from './TodoForm';\n\nimport { v4 as uuidv4 } from 'uuid';\nfunction TodoApp(){\n    //using local storage to display init values\n    const initialTodos = JSON.parse(window.localStorage.getItem('todos') || \"[]\");\n    // const initialTodos =[\n    //     {id: 1, task:'Do wash', completed: true},\n    //     {id: 2, task:'Eat', completed: true},\n    //     {id: 3, task:'Tennis', completed: false},\n\n    // ]\n    const [todos, setTodos] = useState(initialTodos);\n// this will run everytime the component render\n    useEffect(()=>{\n       \n        window.localStorage.setItem(\"todos\", JSON.stringify(todos))\n    });\n\n    const addTodo = (newTodoText) => {\n        setTodos([...todos, {id: uuidv4(), task: newTodoText, completed: false}]);\n    };\n    const removeTodo = todoId =>{\n        const updatedTodos = todos.filter(todo => todo.id !== todoId);\n        setTodos(updatedTodos);\n    };\n    const toggleTodo = todoId =>{\n        const updatedTodos = todos.map( todo => \n            todo.id === todoId ? { ...todo, completed: !todo.completed} : todo)\n        setTodos(updatedTodos);\n    };\n    const editTodo = (todoId, newTask) =>{\n        const updateTodos = todos.map( todo => \n            todo.id === todoId ? {...todo, task: newTask}: todo\n        );\n        setTodos(updateTodos);\n\n    }\n    return (\n        <Paper style = {{padding: 0, margin: 0, height: \"100vh\", backgroundColor: \"white\" }} elevation={0}>\n\n            <AppBar color='primary' position='static' style={{height:\"64px\" }}>\n                <ToolBar>\n                    <Typography color='inherit'>\n                        TODOs WITH HOOLS\n                    </Typography>\n                </ToolBar>\n            </AppBar>\n            <Grid container justify='center' style={{marginTop: \"1rem\"}}>\n                <Grid item xs={11} md={8} lg={4}>\n                    <TodoForm addTodo={addTodo} />\n                    <TodoList \n                        todos = {todos}  \n                        removeTodo ={removeTodo} \n                        toggleTodo={toggleTodo}\n                        editTodo={editTodo}\n                        />\n                 </Grid>\n            </Grid>\n\n        </Paper>\n    );\n}\nexport default TodoApp;\n"]},"metadata":{},"sourceType":"module"}